<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geo.gnss.mybatis.UserMapper">
    <select id="selectUser" parameterType="com.geo.gnss.dao.UserDao" 
        resultType="com.geo.gnss.dao.UserDao">
        select * from customer where name = #{name} and password = #{password}
    </select>
    <select id="selectAll" resultType="com.geo.gnss.dao.UserDao">
        select * from customer
    </select>
    <select id="selectByName" parameterType="String" resultType="com.geo.gnss.dao.UserDao">
        select * from customer where name=#{name}
    </select>
    <select id="findUserById" parameterType="Integer"
        resultType="com.geo.gnss.dao.UserDao">
        select * from customer where id = #{id}
    </select>
    <insert id="addCustomer" useGeneratedKeys="true" keyProperty="id" 
        parameterType="com.geo.gnss.dao.UserDao">
        insert into customer (name,password,authority,email,enable,firstname,lastname,company,telephone,limitdate) values (#{name},#{password},#{authority},#{email},#{enable},#{firstname},#{lastname},#{company},#{telephone},#{limitdate})
    </insert>
    
    <update id="updateUserByNameByAdminster" parameterType="com.geo.gnss.dao.UserDao" >
        update customer set enable=#{enable}, limitdate=#{limitdate} where name=#{name}
    </update>
    
     <update id="updateUserByNameBySuperAdminster" parameterType="com.geo.gnss.dao.UserDao" >
        update customer set authority=#{authority},enable=#{enable}, limitdate=#{limitdate} where name=#{name}
    </update>
    
    <update id="updateUserByNameByAccount" parameterType="com.geo.gnss.dao.UserDao" >
        update customer set password=#{password}, company=#{company}, email=#{email}, telephone=#{telephone} where name=#{name}
    </update>
    
    <delete id="deleteUserByName" parameterType="String">
        delete from customer where name = #{name}
    </delete>
    
    <insert id="insertDownloadLog" parameterType="com.geo.gnss.convertRinex.DownloadInforDao">
        insert into download_log (type, user, downloadDate, dataDate, startTime, endTime, version, station) values (#{type}, #{user}, #{currentDate}, #{dataDate}, #{startTime}, #{endTime}, #{rinexVersion}, #{stationName})
    </insert>
    
    <!-- record表 -->
    <insert id="updateRegisterRecord" parameterType="java.util.Date">
        insert into record values(#{date}, 1 ,0, 0) on  DUPLICATE key update register=register+1
    </insert>
    <insert id="updateDownloadRinexRecord" parameterType="java.util.Date">
        insert into record values(#{date}, 0, 1, 0) on  DUPLICATE key update downloadRinex=downloadRinex+1
    </insert>
    <insert id="updateDownloadVirtualRecord" parameterType="java.util.Date">
        insert into record values(#{date}, 0, 0, 1) on  DUPLICATE key update downloadVirtual=downloadVirtual+1
    </insert>
    
     <insert id="insertRecordTest" parameterType="com.geo.gnss.dao.RecordCountDao">
        insert into record values(#{date}, #{registerCount}, #{rinexCount}, #{virtualCount})
    </insert>
    
    <resultMap id="recordResult" type="com.geo.gnss.dao.RecordCountDao">
	    <result column="recordDate" property="date"></result>
	    <result column="register" property="registerCount"></result>
	    <result column="downloadRinex" property="rinexCount"></result>
	    <result column="downloadVirtual" property="virtualCount"></result>
    </resultMap>

    <select id="selectRecord" resultMap="recordResult">
         select * from record order by recordDate desc limit 30;
    </select>
    
    <!-- logcount表 -->
    <resultMap id="roverResult" type="com.geo.gnss.statistic.RoverDao">
	    <result column="logday" property="date" jdbcType="DATE" javaType="java.util.Date"></result>
	    <result column="count" property="count" ></result>
	    <result column="subtime" property="onlineTime"></result>
    </resultMap>
    
    <select id="selectRoverList" resultMap="roverResult">
        select logday,count(*) as count,sum(onlinetime) as subtime from logcount group by logday order by logday desc limit 30
    </select>
    
    <resultMap id="corsResult" type="com.geo.gnss.statistic.CorsDao">
	    <result column="usertype" property="userType" ></result>
	    <result column="username" property="userName" ></result>
	    <result column="logday" property="logDay" ></result>
	    <result column="addrs" property="addrs"></result>
	    <result column="lastposition" property="position"></result>
	    <result column="onlinetime" property="onlineTime"></result>
    </resultMap>
    
    <select id="selectCorsList" resultMap="corsResult">
        select * from logcount where logday > (curdate()- 30)
    </select>
    
</mapper>